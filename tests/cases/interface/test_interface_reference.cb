// Interfaceの参照テスト

interface Counter {
    void increment();
    int get_count();
};

struct SimpleCounter {
    int count;
};

impl Counter for SimpleCounter {
    void increment() {
        self.count = self.count + 1;
    }
    
    int get_count() {
        return self.count;
    }
};

void increment_twice(Counter& c) {
    c.increment();
    c.increment();
}

Counter& get_counter(Counter& c) {
    return c;
}

int main() {
    // Test 1: Interface参照の基本
    println("Test 1: Interface reference basic");
    SimpleCounter sc;
    sc.count = 10;
    Counter& ref = sc;
    println(ref.get_count());  // 10
    ref.increment();
    println(sc.count);  // 11
    
    // Test 2: 関数パラメータとしてのInterface参照
    println("Test 2: Interface reference parameter");
    SimpleCounter sc2;
    sc2.count = 5;
    increment_twice(sc2);
    println(sc2.count);  // 7
    
    // Test 3: Interface参照を返す関数
    println("Test 3: Return interface reference");
    SimpleCounter sc3;
    sc3.count = 100;
    Counter& ref2 = get_counter(sc3);
    println(ref2.get_count());  // 100
    ref2.increment();
    println(sc3.count);  // 101
    
    return 0;
}
