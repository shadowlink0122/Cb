// selfがポインタの場合のテスト

struct Point {
    int x;
    int y;
};

interface Movable {
    void move(int dx, int dy);
    int getX();
};

impl Movable for Point {
    void move(int dx, int dy) {
        println("Moving point via self...");
        self.x = self.x + dx;
        self.y = self.y + dy;
        println("New x:");
        println(self.x);
        println("New y:");
        println(self.y);
    }
    
    int getX() {
        return self.x;
    }
};

int main() {
    Point p;
    p.x = 10;
    p.y = 20;
    
    println("=== Test 1: Direct struct method call ===");
    println("Initial p.x:");
    println(p.x);
    p.move(5, 10);
    println("After move, p.x:");
    println(p.x);
    println("");
    
    println("=== Test 2: Pointer to struct ===");
    Point p2;
    p2.x = 100;
    p2.y = 200;
    
    // ポインタを取得
    Point* ptr;
    ptr = &p2;
    
    println("Via pointer, (*ptr).x:");
    println((*ptr).x);
    
    // ポインタ経由でメソッド呼び出し（将来実装）
    // ptr->move(5, 10);  // これが動作するべき
    // println("After ptr->move, (*ptr).x:");
    // println((*ptr).x);
    
    return 0;
}
