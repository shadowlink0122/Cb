// 参照の仕様確認: 初期化のみ可能、再代入は値の変更

int main() {
    int a = 10;
    int b = 20;
    int c = 30;
    
    // 参照の初期化
    int& ref = a;
    
    println("Initial state:");
    println("a = ", a, ", b = ", b, ", c = ", c);
    println("ref = ", ref);
    
    // 参照経由で値を変更
    ref = b;  // これは「ref = b」ではなく、「a = b」の意味（aに20を代入）
    
    println("\nAfter ref = b:");
    println("a = ", a, ", b = ", b);
    println("ref = ", ref);
    
    // aが20に変わっているはず
    assert(a == 20);
    assert(ref == 20);
    
    // さらに値を変更
    ref = c;  // これは「a = c」の意味（aに30を代入）
    
    println("\nAfter ref = c:");
    println("a = ", a, ", c = ", c);
    println("ref = ", ref);
    
    // aが30に変わっているはず
    assert(a == 30);
    assert(ref == 30);
    
    // refを通じて直接代入
    ref = 100;
    
    println("\nAfter ref = 100:");
    println("a = ", a);
    println("ref = ", ref);
    
    // aが100に変わっているはず
    assert(a == 100);
    assert(ref == 100);
    
    println("\nReference semantics test passed");
    println("Conclusion: ref = value always modifies the referenced variable");
    println("References cannot be rebound to different variables");
    
    return 0;
}
