// impl Rectangleとimpl Shape for Rectangleの両方のexportをテスト

import shapes;

int main() {
    println("=== Impl Types Export Test ===");
    
    // テスト1: 構造体定義がインポートされているか
    println("\n[Test 1] Struct definition imported:");
    Rectangle rect = Rectangle(100, 50);
    println("Created Rectangle with width=", rect.width, " height=", rect.height);
    assert(rect.width == 100);
    assert(rect.height == 50);
    
    // テスト2: コンストラクタ（impl Rectangle）がインポートされているか
    println("\n[Test 2] Constructor (impl Rectangle) imported:");
    Rectangle rect2 = Rectangle(30, 40);
    assert(rect2.width == 30);
    assert(rect2.height == 40);
    
    // テスト3: インターフェースメソッド（impl Shape for Rectangle）がインポートされているか
    println("\n[Test 3] Interface methods (impl Shape for Rectangle) imported:");
    int area = rect2.getArea();
    println("Area calculated by getArea(): ", area);
    assert(area == 1200);
    
    rect2.display();
    
    // テスト4: インターフェース定義がインポートされているか
    println("\n[Test 4] Interface definition imported:");
    // インターフェース型変数は作成できるか確認
    // Note: この機能がサポートされているか不明なので、コメントアウト
    // Shape shape = rect2;
    println("Interface Shape is available for implementation");
    
    // テスト5: 複数の構造体が同じインターフェースを実装できるか
    // （将来的なテストのためのプレースホルダー）
    println("\n[Test 5] Multiple implementations:");
    println("(Future test: Square, Circle implementing Shape)");
    
    println("\n=== All impl types export tests passed! ===");
    
    return 0;
}
