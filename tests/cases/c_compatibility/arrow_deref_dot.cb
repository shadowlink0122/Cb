// C言語互換性テスト: (*ptr->member).field パターン
// このパターンは v0.9.2 で実装されました

struct Point {
    int x;
    int y;
};

struct Node {
    Point* data;
    Node* next;
};

int main() {
    println("=== Arrow-Dereference-Dot Pattern Test ===");
    
    Point p1 = {x: 10, y: 20};
    Point p2 = {x: 30, y: 40};
    
    Node n1 = {data: &p1, next: 0};
    Node n2 = {data: &p2, next: &n1};
    
    Node* head = &n2;
    
    // テスト1: (*ptr->member).field パターン
    println("Test 1: (*head->data).x");
    assert((*head->data).x == 30);
    println("PASSED: (*head->data).x = 30");
    
    println("Test 2: (*head->data).y");
    assert((*head->data).y == 40);
    println("PASSED: (*head->data).y = 40");
    
    // テスト3: 深いネスト
    println("Test 3: (*head->next->data).x");
    assert((*head->next->data).x == 10);
    println("PASSED: (*head->next->data).x = 10");
    
    // テスト4: 等価な表現
    println("Test 4: Equivalent expressions");
    assert((*head->data).x == head->data->x);
    println("PASSED: (*ptr->member).field == ptr->member->field");
    
    println("\n=== All Tests Passed ===");
    return 0;
}
