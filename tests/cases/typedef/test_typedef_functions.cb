// Typedef構造体の関数引数・返り値テスト

typedef struct {
    int id;
    string name;
    int age;
} Employee;

typedef struct {
    int[3] dimensions;
    int volume;
} Box;

// typedef構造体を返す関数
Employee createEmployee(int id, string name, int age) {
    Employee e = {id, name, age};
    return e;
}

// typedef構造体を引数として受け取る関数
int getEmployeeAge(Employee e) {
    return e.age;
}

// Primitive配列メンバーを持つtypedef構造体を返す関数
Box createBox(int w, int h, int d) {
    Box b;
    b.dimensions[0] = w;
    b.dimensions[1] = h;
    b.dimensions[2] = d;
    b.volume = w * h * d;
    return b;
}

// Primitive配列メンバーを持つtypedef構造体を引数として受け取る関数
void printBox(Box b) {
    println("Box dimensions: %dx%dx%d, volume=%d",
            b.dimensions[0], b.dimensions[1], b.dimensions[2], b.volume);
}

int main() {
    println("=== Test 1: Typedef struct return ===");
    Employee e1 = createEmployee(1001, "Alice", 30);
    if (e1.id != 1001 || e1.age != 30) {
        println("ERROR: createEmployee failed");
        return 1;
    }
    println("Employee: id=%d, name=%s, age=%d", e1.id, e1.name, e1.age);
    
    println("\n=== Test 2: Typedef struct parameter ===");
    int age = getEmployeeAge(e1);
    if (age != 30) {
        println("ERROR: getEmployeeAge failed");
        return 1;
    }
    println("Employee age: %d", age);
    
    println("\n=== Test 3: Typedef struct with array - return ===");
    Box box1 = createBox(10, 20, 30);
    if (box1.dimensions[0] != 10 || box1.dimensions[1] != 20 || box1.dimensions[2] != 30) {
        println("ERROR: createBox dimensions failed");
        return 1;
    }
    if (box1.volume != 6000) {
        println("ERROR: createBox volume failed");
        return 1;
    }
    println("Box: %dx%dx%d, volume=%d",
            box1.dimensions[0], box1.dimensions[1], box1.dimensions[2], box1.volume);
    
    println("\n=== Test 4: Typedef struct with array - parameter ===");
    printBox(box1);
    
    println("\n=== Test 5: Literal to function ===");
    Employee e2 = {2002, "Bob", 25};
    int bob_age = getEmployeeAge(e2);
    if (bob_age != 25) {
        println("ERROR: Literal to function failed");
        return 1;
    }
    println("Bob's age: %d", bob_age);
    
    println("\n=== All typedef function tests passed! ===");
    return 0;
}
