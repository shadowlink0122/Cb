// v0.10.0 ムーブセマンティクス - フォールバックテスト
// ムーブコンストラクタがない場合、コピーコンストラクタにフォールバック

struct Point {
    int x;
    int y;
};

impl Point {
    self(int px, int py) {
        self.x = px;
        self.y = py;
        println("[DEBUG] Constructor: (", px, ", ", py, ")");
    }
    
    // コピーコンストラクタのみ実装（ムーブコンストラクタなし）
    self(const Point& other) {
        self.x = other.x;
        self.y = other.y;
        println("[DEBUG] Copy constructor called");
    }
    
    ~self() {
        println("[DEBUG] Destructor: (", self.x, ", ", self.y, ")");
    }
}

void main() {
    println("=== Fallback to Copy Test ===");
    
    println("\n1. Creating p1:");
    Point p1(10, 20);
    
    println("\n2. Try to move p1 to p2 (should fallback to copy):");
    Point p2 = move(p1);
    println("   p1: (", p1.x, ", ", p1.y, ")");
    println("   p2: (", p2.x, ", ", p2.y, ")");
    
    println("\n3. End of main (both destructors should be called)");
}
