// Test: T&& reference aliasing semantics
// Status: ❌ FAIL (v0.10.0) - 実装未完成
// Expected (v0.10.1+): ref は p1 のエイリアスとして動作
// Actual (v0.10.0): ref は p1 の独立したコピー

struct Point {
    int x;
    int y;
};

int main() {
    Point p1;
    p1.x = 10;
    p1.y = 20;
    
    Point&& ref = p1;
    
    // 元の変数を変更
    p1.x = 99;
    p1.y = 88;
    
    print("p1.x = ");
    println(p1.x);  // 99
    
    print("ref.x = ");
    println(ref.x);  // 期待: 99, 実際: 0 ❌
    
    print("p1.y = ");
    println(p1.y);  // 88
    
    print("ref.y = ");
    println(ref.y);  // 期待: 88, 実際: 0 ❌
    
    // v0.10.1以降で以下を確認:
    // assert(ref.x == 99, "ref should reflect changes to p1");
    // assert(ref.y == 88, "ref should reflect changes to p1");
    
    return 0;
}
