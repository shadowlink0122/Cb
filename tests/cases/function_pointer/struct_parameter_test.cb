// Test: Function pointer with struct parameters
// Tests function pointers that take and return structs

struct Point {
    int x;
    int y;
};

Point add_points(Point p1, Point p2) {
    Point result;
    result.x = p1.x + p2.x;
    result.y = p1.y + p2.y;
    return result;
}

Point multiply_point(Point p, int factor) {
    Point result;
    result.x = p.x * factor;
    result.y = p.y * factor;
    return result;
}

int main() {
    Point p1;
    p1.x = 10;
    p1.y = 20;
    
    Point p2;
    p2.x = 5;
    p2.y = 15;
    
    // Function pointer to struct function
    Point(*op)(Point, Point) = &add_points;
    Point result = op(p1, p2);
    
    println(result.x);  // 15
    println(result.y);  // 35
    
    // Different function pointer
    Point(*scale)(Point, int) = &multiply_point;
    Point scaled = scale(p1, 3);
    
    println(scaled.x);  // 30
    println(scaled.y);  // 60
    
    return result.x + result.y;  // 50
}
