// 構造体メンバーへのインクリメント/デクリメントのテスト

struct Counter {
    int value;
    int count;
};

struct FloatData {
    float x;
    double y;
};

int main() {
    println("Test 1: Struct member post-increment");
    Counter c1;
    c1.value = 10;
    c1.count = 20;
    
    println("Before: value = %d, count = %d", c1.value, c1.count);
    
    // これらがエラーになる可能性がある
    c1.value++;
    c1.count++;
    
    println("After post-increment: value = %d, count = %d", c1.value, c1.count);
    
    println("");
    println("Test 2: Struct member pre-increment");
    Counter c2;
    c2.value = 5;
    c2.count = 15;
    
    println("Before: value = %d, count = %d", c2.value, c2.count);
    
    ++c2.value;
    ++c2.count;
    
    println("After pre-increment: value = %d, count = %d", c2.value, c2.count);
    
    println("");
    println("Test 3: Struct member post-decrement");
    Counter c3;
    c3.value = 30;
    c3.count = 40;
    
    println("Before: value = %d, count = %d", c3.value, c3.count);
    
    c3.value--;
    c3.count--;
    
    println("After post-decrement: value = %d, count = %d", c3.value, c3.count);
    
    println("");
    println("Test 4: Struct member pre-decrement");
    Counter c4;
    c4.value = 50;
    c4.count = 60;
    
    println("Before: value = %d, count = %d", c4.value, c4.count);
    
    --c4.value;
    --c4.count;
    
    println("After pre-decrement: value = %d, count = %d", c4.value, c4.count);
    
    println("");
    println("Test 5: Float struct member increment");
    FloatData fd;
    fd.x = 1.5f;
    fd.y = 2.5;
    
    println("Before: x = %f, y = %f", fd.x, fd.y);
    
    fd.x++;
    fd.y++;
    
    println("After increment: x = %f, y = %f", fd.x, fd.y);
    
    println("");
    println("Test 6: Float struct member decrement");
    FloatData fd2;
    fd2.x = 10.5f;
    fd2.y = 20.5;
    
    println("Before: x = %f, y = %f", fd2.x, fd2.y);
    
    fd2.x--;
    fd2.y--;
    
    println("After decrement: x = %f, y = %f", fd2.x, fd2.y);
    
    return 0;
}
