// const変数のアドレスを非constポインタに代入することを禁止する機能のテスト
include "stdio.cb"

int main() {
    println("=== Test: Const Variable Address Safety ===");
    
    // テスト1: 正しい使い方 - const変数のアドレスはconst pointerで受ける
    const int x = 42;
    const int* ptr1 = &x;
    println("Test 1 PASSED: const int* ptr = &const_var is OK");
    println("  x = ", x, ", *ptr1 = ", *ptr1);
    
    // テスト2: 非const変数のアドレスは非constポインタで受けられる
    int y = 100;
    int* ptr2 = &y;
    println("Test 2 PASSED: int* ptr = &non_const_var is OK");
    println("  y = ", y, ", *ptr2 = ", *ptr2);
    
    // テスト3: 非const変数のアドレスはconst pointerでも受けられる
    const int* ptr3 = &y;
    println("Test 3 PASSED: const int* ptr = &non_const_var is OK");
    println("  y = ", y, ", *ptr3 = ", *ptr3);
    
    // テスト4: const変数のアドレスを非constポインタに代入しようとするとエラー
    int* ptr4;
    // 以下の行をコメント解除するとエラーになるべき
    // ptr4 = &x;  // Error: Cannot assign address of const variable to non-const pointer
    println("Test 4: const safety check works (commented out error line)");
    
    println("");
    println("=== All tests PASSED ===");
    
    return 0;
}
