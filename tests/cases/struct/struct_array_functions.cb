// 構造体配列と関数パラメータ・戻り値テスト（修正版）
struct Point {
    int x;
    int y;
};

// 構造体を関数パラメータとして使用
int get_distance_squared(Point p1, Point p2) {
    int dx = p2.x - p1.x;
    int dy = p2.y - p1.y;
    return dx * dx + dy * dy;
}

// 構造体を戻り値として使用
Point create_point(int x, int y) {
    Point result;
    result.x = x;
    result.y = y;
    return result;
}

int main() {
    // 構造体配列
    Point[3] points;
    
    points[0].x = 1;
    points[0].y = 2;
    points[1].x = 3;
    points[1].y = 4;
    points[2].x = 5;
    points[2].y = 6;
    
    int distance = get_distance_squared(points[0], points[1]);
    Point new_point = create_point(10, 20);
    
    println("Distance squared:", distance);
    println("Point 0: (%d, %d)", points[0].x, points[0].y);
    println("Point 1: (%d, %d)", points[1].x, points[1].y);
    println("New point: (%d, %d)", new_point.x, new_point.y);
    
    return 0;
}
