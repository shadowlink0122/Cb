// 構造体配列要素を関数引数として渡すテスト

typedef struct {
    int x;
    int y;
    string label;
} Point;

void printPoint(Point p) {
    println("Point: %s (%d, %d)", p.label, p.x, p.y);
}

int main() {
    println("=== Array Element Function Argument Test ===");
    
    // 構造体配列を作成
    Point[3] points;
    
    // 個別要素を初期化（メンバーごと代入で）
    points[0].x = 0;
    points[0].y = 0;
    points[0].label = "Start";
    
    points[1].x = 5;
    points[1].y = 5;
    points[1].label = "Middle";
    
    points[2].x = 10;
    points[2].y = 10;
    points[2].label = "End";
    
    // 個別確認（直接アクセス）
    println("Direct access:");
    println("Point 0: %s (%d, %d)", points[0].label, points[0].x, points[0].y);
    println("Point 1: %s (%d, %d)", points[1].label, points[1].x, points[1].y);
    println("Point 2: %s (%d, %d)", points[2].label, points[2].x, points[2].y);
    
    println("\nFunction call test:");
    
    // 単一の構造体変数を関数引数として渡す（これは動作する）
    Point single = points[0];  // 構造体コピー
    printPoint(single);
    
    // 構造体配列要素を直接関数引数として渡す（これでセグフォルトが発生する可能性）
    println("Attempting array element function call...");
    printPoint(points[0]);  // ⚠️ これが問題
    
    return 0;
}
