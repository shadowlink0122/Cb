// ポインタの境界値テストと配列の端でのポインタ操作

int main() {
    println("=== Pointer Boundary and Edge Case Tests ===");
    println("");
    
    // テスト1: 配列の最初の要素
    println("Test 1: First Element");
    int[5] arr = [100, 200, 300, 400, 500];
    int* p = &arr[0];
    
    if (*p != 100) {
        println("FAIL: First element value");
        return 1;
    }
    println("  PASS: First element *p =", *p);
    
    // テスト2: 配列の最後の要素
    println("Test 2: Last Element");
    int* last = &arr[4];
    if (*last != 500) {
        println("FAIL: Last element value");
        return 1;
    }
    println("  PASS: Last element *last =", *last);
    
    // テスト3: 配列全体をポインタでスキャン
    println("Test 3: Full Array Scan");
    int* scan = &arr[0];
    int[5] expected = [100, 200, 300, 400, 500];
    
    int i = 0;
    while (i < 5) {
        if (*scan != expected[i]) {
            println("FAIL: Scan at index", i, "expected", expected[i], "got", *scan);
            return 1;
        }
        scan = scan + 1;
        i = i + 1;
    }
    println("  PASS: Full array scan completed");
    
    // テスト4: 逆順スキャン
    println("Test 4: Reverse Scan");
    int* rscan = &arr[4];
    i = 4;
    while (i >= 0) {
        if (*rscan != expected[i]) {
            println("FAIL: Reverse scan at index", i);
            return 1;
        }
        if (i > 0) {
            rscan = rscan - 1;
        }
        i = i - 1;
    }
    println("  PASS: Reverse scan completed");
    
    // テスト5: ポインタ演算の連続
    println("Test 5: Consecutive Pointer Operations");
    int* ptr = &arr[0];
    
    // 0 -> 1 -> 2 -> 1 -> 0 -> 2 -> 4
    ptr = ptr + 1;  // index 1
    if (*ptr != 200) {
        println("FAIL: Step 1");
        return 1;
    }
    
    ptr = ptr + 1;  // index 2
    if (*ptr != 300) {
        println("FAIL: Step 2");
        return 1;
    }
    
    ptr = ptr - 1;  // index 1
    if (*ptr != 200) {
        println("FAIL: Step 3");
        return 1;
    }
    
    ptr = ptr - 1;  // index 0
    if (*ptr != 100) {
        println("FAIL: Step 4");
        return 1;
    }
    
    ptr = ptr + 2;  // index 2
    if (*ptr != 300) {
        println("FAIL: Step 5");
        return 1;
    }
    
    ptr = ptr + 2;  // index 4
    if (*ptr != 500) {
        println("FAIL: Step 6");
        return 1;
    }
    
    println("  PASS: All consecutive operations");
    
    println("");
    println("=== All Boundary Tests Passed ===");
    return 0;
}
