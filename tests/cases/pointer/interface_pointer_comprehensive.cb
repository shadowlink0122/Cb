// インターフェースポインタの包括的なテスト

interface Shape {
    int area();
    int perimeter();
}

struct Rectangle {
    int width;
    int height;
}

impl Shape for Rectangle {
    int area() {
        return width * height;
    }
    
    int perimeter() {
        return 2 * (width + height);
    }
    
    // implブロック内でのポインタ操作テスト
    int test_pointer_operations() {
        // 配列とポインタを使った計算
        int[3] values = [10, 20, 30];
        int* p = &values[0];
        
        int sum = 0;
        sum = sum + *p;  // 10
        p++;
        sum = sum + *p;  // 20
        p++;
        sum = sum + *p;  // 30
        
        // sum = 60を期待
        return sum;
    }
    
    // アドレスと値の調査
    int test_address_investigation() {
        int[5] arr = [1, 2, 3, 4, 5];
        int* p1 = &arr[0];
        int* p2 = &arr[1];
        
        // 両方のポインタが正しい値を指しているか確認
        if (*p1 != 1) {
            return -1;
        }
        if (*p2 != 2) {
            return -2;
        }
        
        // ポインタ演算
        p1 = p1 + 1;
        if (*p1 != 2) {
            return -3;
        }
        
        // p1とp2は今同じ要素を指しているはず
        if (*p1 != *p2) {
            return -4;
        }
        
        return 100;  // 成功
    }
}

int main() {
    Rectangle rect;
    rect.width = 10;
    rect.height = 20;
    
    // テスト1: インターフェース型変数へのポインタ
    Shape* shape_ptr = &rect;
    
    int area_result = (*shape_ptr).area();
    if (area_result != 200) {
        println("FAIL: Test 1 - Interface pointer area()");
        return 1;
    }
    
    int perimeter_result = (*shape_ptr).perimeter();
    if (perimeter_result != 60) {
        println("FAIL: Test 1 - Interface pointer perimeter()");
        return 1;
    }
    
    // テスト2: impl内でのポインタ操作
    int pointer_ops_result = rect.test_pointer_operations();
    if (pointer_ops_result != 60) {
        println("FAIL: Test 2 - Pointer operations in impl, expected 60 got", pointer_ops_result);
        return 1;
    }
    
    // テスト3: impl内でのアドレス調査
    int address_test_result = rect.test_address_investigation();
    if (address_test_result != 100) {
        println("FAIL: Test 3 - Address investigation in impl, error code:", address_test_result);
        return 1;
    }
    
    // テスト4: インターフェースポインタ経由でimpl内のポインタテストを呼び出す
    Shape* sp = &rect;
    int result_via_interface = (*sp).test_pointer_operations();
    if (result_via_interface != 60) {
        println("FAIL: Test 4 - Pointer operations via interface pointer");
        return 1;
    }
    
    println("PASS: All interface pointer tests");
    return 0;
}
